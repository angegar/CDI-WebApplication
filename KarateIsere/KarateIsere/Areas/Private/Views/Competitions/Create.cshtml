@model KarateIsere.DataAccess.Competition
@using KarateIsere.DataAccess;
@{
    //Truc et astuce pour pouvoir utiliser la vue "Create" pour create et edit
    string action = ViewContext.RouteData.GetRequiredString("action");
    if (action != "Edit") {
        action = "Create";
    }
}

@using (Html.BeginForm(@action, "Competitions", FormMethod.Post)) {
    @Html.AntiForgeryToken()

    if (action == "Edit") { 
        @Html.HiddenFor(model=>model.CompetitionID)
    }
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new {
       @class = "text-danger"
   })
        <div class="form-group">
            @Html.LabelFor(model => model.Nom, htmlAttributes: new {
           @class = "control-label col-md-2"
       })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nom, new {
               htmlAttributes = new {
                   @class = "form-control"
               }
           })
                @Html.ValidationMessageFor(model => model.Nom, "", new {
               @class = "text-danger"
           })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateCompetition, htmlAttributes: new {
           @class = "control-label col-md-2"
       })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateCompetition, new {
               htmlAttributes = new {
                   @class = "form-control",
                   placeholder = "Choisissez une date",
               }
           })

                @Html.ValidationMessageFor(model => model.DateCompetition, "", new {
               @class = "text-danger"
           })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinInscription, htmlAttributes: new {
           @class = "control-label col-md-2"
       })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinInscription, new {
               htmlAttributes = new {
                   @class = "form-control",
               }
           })
                @Html.ValidationMessageFor(model => model.FinInscription, "", new {
               @class = "text-danger"
           })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lieu, htmlAttributes: new {
           @class = "control-label col-md-2"
       })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lieu, new {
               htmlAttributes = new {
                   @class = "form-control"
               }
           })
                @Html.ValidationMessageFor(model => model.Lieu, "", new {
               @class = "text-danger"
           })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsKata, htmlAttributes: new {
           @class = "control-label col-md-2"
       })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsKata)
                    @Html.ValidationMessageFor(model => model.IsKata, "", new {
                   @class = "text-danger"
               })
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title">
                        <h5>Liste des catégories</h5>
                    </div>
                </div>
                <div class="panel-body"
                     dropzone="true" ondrop="dropRemove(event)" ondragover="allowDrop(event)">
                    <ul id="dropSrc">
                        @if (ViewBag.CateList != null) {
                            foreach (var item in ViewBag.CateList) {
                                <li id="@item" draggable="true" ondragstart="drag(event)">@item</li>
                            }
                        }
                    </ul>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <div class="panel-title">
                        <h5>Glissez et déposez les catégories sélectionnées</h5>
                    </div>
                </div>

                <div class="panel-body"
                     dropzone="true" ondrop="dropAdd(event)" ondragover="allowDrop(event)">

                    <ul id="dropDest">
                        @if (Model != null && Model.Categorie != null) {
                            foreach (Categorie item in Model.Categorie) {
                                <li id="@item.Nom" draggable="true" ondragstart="drag(event)">@item.Nom</li>
                            }
                        }
                    </ul>

                </div>
            </div>
        </div>

        <div class="clearfix"></div>

        <div class="form-groupcol-md-12">
            <div class="col-md-offset-5">
                @if (@action == "Edit") {
                    <input type="submit" value="Modifier" class="btn btn-default" />
                }
                else {

                    <input type="submit" value="Créer" class="btn btn-default" />
                }
            </div>
        </div>
    </div>
}


<script>
    function allowDrop(ev) {
        ev.preventDefault();
    }

    function drag(ev) {
        console.log("drag" + ev);
        ev.dataTransfer.setData("text/html", ev.target.id);
    }

    function dropAdd(ev) {
        console.log("drop" + ev);
        ev.preventDefault();
        var data = ev.dataTransfer.getData("text/html");
        console.log(data);
        console.log(ev.target);
        // ev.target.appendChild(document.getElementById(data));

        $.ajax({
            type: "POST",
            url: "@Url.Action( "AddCategorie","Competitions" )",
            data: { name: data },
            success: function (res) {
                $("#dropDest").append(document.getElementById(data));
            }
        });
    }

    function dropRemove(ev) {
        console.log("dropRemove" + ev);
        ev.preventDefault();
        var data = ev.dataTransfer.getData("text/html");
        console.log(data);
        console.log(ev.target);

        $.ajax({
            type: "POST",
            url: "@Url.Action( "DelCategorie","Competitions" )",
            data: { name: data },
            success: function (res) {
                $("#dropSrc").append(document.getElementById(data));
            }
        });

    }

    $('.datepicker').datepicker({
        //format: 'dd/mm/yyyy',
        startDate: '9m',
        language: 'fr'
    })
</script>