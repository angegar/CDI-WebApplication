@model KarateIsere.DataAccess.Competiteur
@using KarateIsere.DataAccess

@using (Html.BeginForm( "Create", "Competiteurs", routeValues: null, method: FormMethod.Post )) {
    @Html.AntiForgeryToken()
    
    string numAffiliation = (Session["User"] as ApplicationUser).NumAffiliation;

    <div class="form-horizontal">

        @Html.ValidationSummary( true, "", new {
       @class = "text-danger"
   } )

        @Html.Hidden("NumAffiliation", numAffiliation)
        
        <div class="form-group">
            @Html.LabelFor( model => model.NumLicence, htmlAttributes: new {
           @class = "control-label col-md-2"
       } )
            <div class="col-md-10">
                @Html.EditorFor( model => model.NumLicence, new {
               htmlAttributes = new {
                   @class = "form-control"
               }
           } )
                @Html.ValidationMessageFor( model => model.NumLicence, "", new {
               @class = "text-danger"
           } )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor( model => model.Nom, htmlAttributes: new {
           @class = "control-label col-md-2"
       } )
            <div class="col-md-10">
                @Html.EditorFor( model => model.Nom, new {
               htmlAttributes = new {
                   @class = "form-control"
               }
           } )
                @Html.ValidationMessageFor( model => model.Nom, "", new {
               @class = "text-danger"
           } )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor( model => model.Prenom, htmlAttributes: new {
           @class = "control-label col-md-2"
       } )
            <div class="col-md-10">
                @Html.EditorFor( model => model.Prenom, new {
               htmlAttributes = new {
                   @class = "form-control"
               }
           } )
                @Html.ValidationMessageFor( model => model.Prenom, "", new {
               @class = "text-danger"
           } )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor( model => model.Categorie.Nom, "Categorie", htmlAttributes: new {
           @class = "control-label col-md-2"
       } )
            <div class="col-md-10">
                @Html.DropDownListFor( model => model.CategorieID, (List<SelectListItem>) ViewBag.Categories, htmlAttributes: new {
               @class = "form-control"
           } )
                @Html.ValidationMessageFor( model => model.Categorie, "", new {
               @class = "text-danger"
           } )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor( model => model.Poids, htmlAttributes: new {
           @class = "control-label col-md-2"
       } )
            <div class="col-md-10">
                @Html.EditorFor( model => model.Poids, new {
               htmlAttributes = new {
                   @class = "form-control"
               }
           } )
                @Html.ValidationMessageFor( model => model.Poids, "", new {
               @class = "text-danger"
           } )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor( model => model.isHomme, htmlAttributes: new {
           @class = "control-label col-md-2"
       } )
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor( model => model.isHomme )
                    @Html.ValidationMessageFor( model => model.isHomme, "", new {
                   @class = "text-danger"
               } )
                </div>
            </div>
        </div>
        @*
            <div class="form-group">
                @Html.LabelFor(model => model.NumAffiliationClub, "NumAffiliationClub", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("NumAffiliationClub", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.NumAffiliationClub, "", new { @class = "text-danger" })
                </div>
            </div>
        *@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Ajouter" class="btn btn-default" />
            </div>
        </div>
    </div>
}
